// <auto-generated />
using CountryAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CountryAPI_API.Migrations
{
    [DbContext(typeof(CountryDBContext))]
    [Migration("20201127070730_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CountryAPI.Entities.CountryEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CapitalCity")
                        .HasColumnType("text");

                    b.Property<string>("Continent")
                        .HasColumnType("text");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<double>("Population")
                        .HasColumnType("double precision");

                    b.Property<string>("PrimaryLanguage")
                        .HasColumnType("text");

                    b.Property<string>("SecondaryLanguage")
                        .HasColumnType("text");

                    b.Property<double>("ValueToUSD")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
